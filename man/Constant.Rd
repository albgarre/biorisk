% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constants.R
\name{Constant}
\alias{Constant}
\title{R6 Class Representing a Constant}
\description{
A constant that can be used as input by other methods
}
\section{Super class}{
\code{\link[biorisk:RiskElement]{biorisk::RiskElement}} -> \code{Constant}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{value}}{The value of the constant}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Constant-new}{\code{Constant$new()}}
\item \href{#method-Constant-simulate}{\code{Constant$simulate()}}
\item \href{#method-Constant-simulate_level}{\code{Constant$simulate_level()}}
\item \href{#method-Constant-point_estimate}{\code{Constant$point_estimate()}}
\item \href{#method-Constant-clone}{\code{Constant$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="boxplot"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-boxplot'><code>biorisk::RiskElement$boxplot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="check_input_types"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-check_input_types'><code>biorisk::RiskElement$check_input_types()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="cummulative_plot"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-cummulative_plot'><code>biorisk::RiskElement$cummulative_plot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="cummulative_plot_2D"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-cummulative_plot_2D'><code>biorisk::RiskElement$cummulative_plot_2D()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="density_plot"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-density_plot'><code>biorisk::RiskElement$density_plot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="density_plot_2D"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-density_plot_2D'><code>biorisk::RiskElement$density_plot_2D()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="get_output"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-get_output'><code>biorisk::RiskElement$get_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="get_output_2D"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-get_output_2D'><code>biorisk::RiskElement$get_output_2D()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="get_output_type"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-get_output_type'><code>biorisk::RiskElement$get_output_type()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="histogram"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-histogram'><code>biorisk::RiskElement$histogram()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="map_input"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-map_input'><code>biorisk::RiskElement$map_input()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="quantiles"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-quantiles'><code>biorisk::RiskElement$quantiles()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="quantiles_2D"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-quantiles_2D'><code>biorisk::RiskElement$quantiles_2D()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="save_as_distribution"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-save_as_distribution'><code>biorisk::RiskElement$save_as_distribution()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="save_as_vector"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-save_as_vector'><code>biorisk::RiskElement$save_as_vector()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biorisk" data-topic="RiskElement" data-id="simulate_2D"><a href='../../biorisk/html/RiskElement.html#method-RiskElement-simulate_2D'><code>biorisk::RiskElement$simulate_2D()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-new"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$new(name, value, output_unit = NA, level = 0)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-simulate"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-simulate}{}}}
\subsection{Method \code{simulate()}}{
Make simulation. Returns a vector of length niter with self.value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$simulate(niter, check_units = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{niter}}{Number of iterations (length of the vector).}

\item{\code{check_units}}{Ignore.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-simulate_level"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-simulate_level}{}}}
\subsection{Method \code{simulate_level()}}{
Simulation at some level for X-D Monte Carlo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$simulate_level(niter0, iter1 = 1, level = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{niter0}}{Number of iterations at the lower level}

\item{\code{iter1}}{Iteration at the upper level}

\item{\code{level}}{Level of the calculation (ignored, it always returns a vector
to facilitate the mutates)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-point_estimate"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-point_estimate}{}}}
\subsection{Method \code{point_estimate()}}{
Returns the value of the constant
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$point_estimate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parent_module.R
\name{RiskModule}
\alias{RiskModule}
\title{Parent class for modules}
\description{
Parent class for modules

Parent class for modules
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{A character giving a name to this constant}

\item{\code{inputs}}{A tibble with the inputs of the module and its units}

\item{\code{depends_on}}{List describing the dependencies for each input}

\item{\code{depended_by}}{A list of modules that use this instance as input}

\item{\code{output}}{Name of the output variable}

\item{\code{output_unit}}{Unit of the output variable}

\item{\code{simulations}}{A tibble with the results of the simulations}

\item{\code{type}}{A character describing the type of the module}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RiskModule$new()}}
\item \href{#method-map_input}{\code{RiskModule$map_input()}}
\item \href{#method-simulate}{\code{RiskModule$simulate()}}
\item \href{#method-get_output}{\code{RiskModule$get_output()}}
\item \href{#method-save_as_vector}{\code{RiskModule$save_as_vector()}}
\item \href{#method-save_as_distribution}{\code{RiskModule$save_as_distribution()}}
\item \href{#method-clone}{\code{RiskModule$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new module
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$new(
  name,
  input_names = NA,
  units = NA,
  module_type = "",
  output_var = "",
  output_unit = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name}

\item{\code{input_names}}{A character vector with the names of the inputs}

\item{\code{units}}{A character vector of units for each input}

\item{\code{module_type}}{A character with the type of module}

\item{\code{output_var}}{A character with the name of the output variable}

\item{\code{output_unit}}{A character with the unit of the output}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new instance of the module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-map_input"></a>}}
\if{latex}{\out{\hypertarget{method-map_input}{}}}
\subsection{Method \code{map_input()}}{
Map an input to a module
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$map_input(input, module, check_units = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{A character identifying the input variable}

\item{\code{module}}{An instance of a module to use as input}

\item{\code{check_units}}{Ignored}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Self (invisible)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-simulate"></a>}}
\if{latex}{\out{\hypertarget{method-simulate}{}}}
\subsection{Method \code{simulate()}}{
Make simulation. Returns a vector of length niter with self.value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$simulate(niter, check_units = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{niter}}{Number of iterations (length of the vector).}

\item{\code{check_units}}{Ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector with the output variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_output"></a>}}
\if{latex}{\out{\hypertarget{method-get_output}{}}}
\subsection{Method \code{get_output()}}{
Get the output
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$get_output()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{niter}}{Number of iterations (length of the vector).}

\item{\code{check_units}}{Ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A vector with the output variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save_as_vector"></a>}}
\if{latex}{\out{\hypertarget{method-save_as_vector}{}}}
\subsection{Method \code{save_as_vector()}}{
Saves the output of the simulation as a vector module
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$save_as_vector(name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the new module (vctr_from_+self_name by default)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An instance of Vector
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save_as_distribution"></a>}}
\if{latex}{\out{\hypertarget{method-save_as_distribution}{}}}
\subsection{Method \code{save_as_distribution()}}{
Saves the output of the simulation as an empirical distribution.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$save_as_distribution(name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the new module (distr_from_+self_name by default)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An instance of EmpiricalDistr
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RiskModule$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

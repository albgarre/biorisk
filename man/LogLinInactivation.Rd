% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inactivation.R
\name{LogLinInactivation}
\alias{LogLinInactivation}
\title{R6 class describing log-linear inactivation}
\description{
R6 class describing log-linear inactivation

R6 class describing log-linear inactivation
}
\details{
A risk module describing log-linear inactivation. It has 3 inputs: logN0, t
and logD.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{A character giving a name to this constant}

\item{\code{inputs}}{A tibble describing the inputs and their units.}

\item{\code{depends_on}}{A list with the mapping of each input}

\item{\code{depended_by}}{A list of modules that use this instance as input}

\item{\code{simulations}}{A tibble with the results of the simulations}

\item{\code{type}}{A character defining it as an inactivation module}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{LogLinInactivation$new()}}
\item \href{#method-map_input}{\code{LogLinInactivation$map_input()}}
\item \href{#method-simulate}{\code{LogLinInactivation$simulate()}}
\item \href{#method-get_output}{\code{LogLinInactivation$get_output()}}
\item \href{#method-clone}{\code{LogLinInactivation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new inactivation module
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogLinInactivation$new(name, units = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name}

\item{\code{units}}{units of the parameter (NULL by default)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new Inactivation Module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-map_input"></a>}}
\if{latex}{\out{\hypertarget{method-map_input}{}}}
\subsection{Method \code{map_input()}}{
Maps an input variable to a module/constant.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogLinInactivation$map_input(input, module, check_units = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{Character identifying the input}

\item{\code{module}}{A module/constant whose output is used as input.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self (silently)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-simulate"></a>}}
\if{latex}{\out{\hypertarget{method-simulate}{}}}
\subsection{Method \code{simulate()}}{
Simulates the module
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogLinInactivation$simulate(niter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{niter}}{Number of Monte Carlo simulations.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the output of the module
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_output"></a>}}
\if{latex}{\out{\hypertarget{method-get_output}{}}}
\subsection{Method \code{get_output()}}{
Get the output of the simulations
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogLinInactivation$get_output()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the output of the module (logN)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogLinInactivation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
